// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: pPMwtDeJqhjkevukr6y1tF
import * as React from "react";
import { hasVariant, ensureGlobalVariants } from "@plasmicapp/react-web";
import { ContentfulCredentialsProvider } from "@plasmicpkgs/plasmic-contentful"; // plasmic-import: lXSCSEWn2xb/codeComponent
import { EmbedCss } from "@plasmicpkgs/plasmic-embed-css"; // plasmic-import: qF0uJxFztB/codeComponent

export interface GlobalContextsProviderProps {
  children?: React.ReactElement;
  contentfulCredentialsProviderProps?: Partial<
    Omit<React.ComponentProps<typeof ContentfulCredentialsProvider>, "children">
  >;
  embedCssProps?: Partial<
    Omit<React.ComponentProps<typeof EmbedCss>, "children">
  >;
}

export default function GlobalContextsProvider(
  props: GlobalContextsProviderProps
) {
  const { children, contentfulCredentialsProviderProps, embedCssProps } = props;

  return (
    <ContentfulCredentialsProvider
      {...contentfulCredentialsProviderProps}
      accessToken={
        contentfulCredentialsProviderProps &&
        "accessToken" in contentfulCredentialsProviderProps
          ? contentfulCredentialsProviderProps.accessToken!
          : ("OkCcxcDoH7B9w2PWj3nQA_EEb1YvqGkyIBfWZmQRO5s" as const)
      }
      environment={
        contentfulCredentialsProviderProps &&
        "environment" in contentfulCredentialsProviderProps
          ? contentfulCredentialsProviderProps.environment!
          : ("master" as const)
      }
      space={
        contentfulCredentialsProviderProps &&
        "space" in contentfulCredentialsProviderProps
          ? contentfulCredentialsProviderProps.space!
          : ("xofpvkk2kowr" as const)
      }
    >
      <EmbedCss
        {...embedCssProps}
        css={
          embedCssProps && "css" in embedCssProps
            ? embedCssProps.css!
            : ("/* .banner-ani-rect {\r\n    transition: fill .2s ease;\r\n} */\r\n\r\n.rec1 {\r\n    animation: rec1-color-change 10s infinite;\r\n    /* fill: #FF604D; */\r\n}\r\n\r\n@keyframes rec1-color-change {\r\n    0% {fill: #FF604D};\r\n    100% {fill: #FF604D};\r\n}\r\n\r\n\r\n" as const)
        }
      >
        {children}
      </EmbedCss>
    </ContentfulCredentialsProvider>
  );
}
